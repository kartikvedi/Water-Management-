# Generated by Django 2.2.1 on 2020-07-31 13:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(default='', max_length=30, unique=True)),
                ('email', models.CharField(default=' ', max_length=100, unique=True, verbose_name='email')),
                ('password', models.CharField(max_length=100)),
                ('name', models.CharField(default=' ', max_length=30)),
                ('PhoneNo', models.CharField(blank=True, max_length=11, null=True)),
                ('cnic', models.CharField(blank=True, max_length=13, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_available', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=False)),
                ('is_customer', models.BooleanField(default=False)),
                ('is_corporate', models.BooleanField(default=False)),
                ('is_employee', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('address', models.CharField(blank=True, max_length=120, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('total_amount', models.IntegerField()),
                ('distributed', models.IntegerField(default=0)),
                ('desc', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Bottles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='19 Litre Bottle', max_length=50)),
                ('total', models.IntegerField()),
                ('filled', models.IntegerField()),
                ('distributed', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivered', models.BooleanField(default=False)),
                ('address', models.CharField(blank=True, max_length=120, null=True)),
                ('frequency', models.CharField(choices=[('1', 'One Time'), ('2', 'Recursive')], default=('1', 'One Time'), max_length=1)),
                ('ordered_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('delivered_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('price', models.IntegerField(default=0)),
                ('confirmed', models.BooleanField(default=False)),
                ('priority', models.IntegerField(choices=[(1, 'Normal'), (2, 'High')], default=1)),
                ('area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.Area')),
            ],
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('price', models.IntegerField()),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('weight', models.FloatField(default=0)),
            ],
            options={
                'verbose_name': 'Product',
            },
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicleModel', models.CharField(max_length=255)),
                ('weightCapacity', models.IntegerField()),
                ('tolerance', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('NoOfBottles', models.IntegerField(blank=True, default=0, null=True)),
                ('AmountDue', models.IntegerField(blank=True, default=0, null=True)),
                ('MonthlyBill', models.IntegerField(blank=True, default=0, null=True)),
                ('AverageWeekly', models.IntegerField(blank=True, null=True)),
                ('NotInArea', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
            bases=('database.person',),
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('receivedAmount', models.IntegerField(default=0)),
                ('receivedBottle', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
            bases=('database.person',),
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registrationNo', models.CharField(max_length=15, unique=True)),
                ('vehicleModel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.VehicleType')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleProducts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_quantity', models.IntegerField(default=0)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Products')),
            ],
            options={
                'verbose_name': 'Schedule Product',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], max_length=10)),
                ('order', models.IntegerField(default=0, editable=False)),
                ('day_capacity', models.FloatField(default=0)),
                ('tolerance', models.FloatField(default=0)),
                ('extraBottles', models.IntegerField(default=0)),
                ('areas', models.ManyToManyField(blank=True, null=True, to='database.Area')),
                ('daily_load', models.ManyToManyField(to='database.ScheduleProducts')),
                ('orders', models.ManyToManyField(blank=True, null=True, to='database.Order')),
                ('vehicle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='database.Vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='OrderDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Products')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='desc',
            field=models.ManyToManyField(to='database.OrderDetail'),
        ),
        migrations.AddField(
            model_name='order',
            name='vehicle',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.Vehicle'),
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='database.Order', unique=True)),
            ],
            options={
                'verbose_name': 'Notification',
            },
        ),
        migrations.CreateModel(
            name='CustomerPrices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField(default=0)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Products')),
            ],
            options={
                'verbose_name': 'Customer Assigned Price',
            },
        ),
        migrations.CreateModel(
            name='CustomerAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(default=0)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Asset')),
            ],
            options={
                'verbose_name': 'Customer Asset',
            },
        ),
        migrations.AddField(
            model_name='area',
            name='city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.City'),
        ),
        migrations.AddField(
            model_name='person',
            name='area',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.Area'),
        ),
        migrations.CreateModel(
            name='Corporate',
            fields=[
                ('customer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='database.Customer')),
                ('NTN', models.IntegerField(blank=True, null=True)),
                ('STRN', models.IntegerField(blank=True, null=True)),
                ('registration_number', models.IntegerField(blank=True, null=True)),
                ('registered_address', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('database.customer',),
        ),
        migrations.AddField(
            model_name='order',
            name='customer',
            field=models.ForeignKey(limit_choices_to={'is_customer': True}, on_delete=django.db.models.deletion.CASCADE, related_name='order_is_customer', to='database.Customer'),
        ),
        migrations.AddField(
            model_name='order',
            name='delivered_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.Employee'),
        ),
        migrations.AddField(
            model_name='customer',
            name='assets',
            field=models.ManyToManyField(blank=True, null=True, to='database.CustomerAssets'),
        ),
        migrations.AddField(
            model_name='customer',
            name='discounted_price',
            field=models.ManyToManyField(to='database.CustomerPrices'),
        ),
        migrations.AlterUniqueTogether(
            name='area',
            unique_together={('city', 'name')},
        ),
    ]
